name: Build

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [{{ cookiecutter.all_python_versions }}]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: {% raw %}${{ matrix.python_version }}{% endraw %}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        hatch env create
    - name: Lint and typecheck
      run: |
        hatch run lint-check
    - name: Test
      run: |
        hatch run test-cov-xml
    - uses: codecov/codecov-action@v3
      with:
        token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
        fail_ci_if_error: true
        verbose: true

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '{{ cookiecutter.main_python_version }}'
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch
    - name: Build and publish on PyPI
      env:
        HATCH_INDEX_USER: {% raw %}${{ secrets.HATCH_INDEX_USER }}{% endraw %}
        HATCH_INDEX_AUTH: {% raw %}${{ secrets.HATCH_INDEX_AUTH }}{% endraw %}
      run: |
        hatch build
        hatch publish
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        body: {% raw %}${{ github.event.head_commit.message }}{% endraw %}
        artifacts: dist/*.whl,dist/*.tar.gz
        token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
